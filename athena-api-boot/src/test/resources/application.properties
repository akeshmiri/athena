## Test Container with clean db
#spring.datasource.url=jdbc:tc:postgresql:latest:///athena?TC_INITSCRIPT=psql/create-schema.sql
#spring.datasource.username=test
#spring.datasource.password=test
#spring.jpa.hibernate.ddl-auto=create
## Test Container with pre-setup data
spring.datasource.url=jdbc:tc:athena-demo:0.1:///athena
spring.datasource.username=postgres
spring.datasource.password=password
spring.datasource.driver-class-name=org.testcontainers.jdbc.ContainerDatabaseDriver
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.database=postgresql
## Test local db
#spring.datasource.url=jdbc:postgresql://${DB_HOSTNAME:localhost}:${DB_PORT:5432}/${DB_DATABASE:athena}
#spring.datasource.username=${DB_USER:postgres}
#spring.datasource.password=${DB_PASS:password}
#spring.jpa.hibernate.ddl-auto=create
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true
spring.jpa.open-in-view=false
## Schema Generation
#spring.jpa.properties.jakarta.persistence.schema-generation.scripts.action=drop-and-create
#spring.jpa.properties.jakarta.persistence.schema-generation.scripts.create-source=metadata
#spring.jpa.properties.jakarta.persistence.schema-generation.scripts.drop-target=drop-and-create.sql
#spring.jpa.properties.jakarta.persistence.schema-generation.scripts.create-target=V1__init_athena.sql
## Show Sql
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
## Logging
logging.level.org.hibernate.orm.jdbc.bind=warn
logging.level.org.catools.athena=warn
## Flyway
spring.flyway.enabled=false
