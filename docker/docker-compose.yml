services:
  athena-db:
    image: akeshmiri/athena-pg-demo:0.2
    pull_policy: if_not_present
    restart: always
    environment:
      POSTGRES_PASSWORD: "password"
    ports:
      - "5432:5432"
    networks:
      - athena-network
    volumes:
      - athena-db:/var/lib/postgresql/data

  athena-core:
    image: akeshmiri/athena-boot-core:latest
    pull_policy: never
    restart: always
    depends_on:
      - athena-db
    environment:
      DB_PSQL_URL: "jdbc:postgresql://athena-db:5432/athena"
    ports:
      - "8081:8081"
    networks:
      - athena-network

  athena-git:
    image: akeshmiri/athena-boot-git:latest
    pull_policy: never
    restart: always
    depends_on:
      - athena-db
      - athena-core
    environment:
      DB_PSQL_URL: "jdbc:postgresql://athena-db:5432/athena"
    ports:
      - "8082:8082"
    networks:
      - athena-network

  athena-kube:
    image: akeshmiri/athena-boot-kube:latest
    pull_policy: never
    restart: always
    depends_on:
      - athena-db
      - athena-core
    environment:
      DB_PSQL_URL: "jdbc:postgresql://athena-db:5432/athena"
    ports:
      - "8083:8083"
    networks:
      - athena-network

  athena-metric:
    image: akeshmiri/athena-boot-metric:latest
    pull_policy: never
    restart: always
    depends_on:
      - athena-db
      - athena-core
    environment:
      DB_PSQL_URL: "jdbc:postgresql://athena-db:5432/athena"
    ports:
      - "8084:8084"
    networks:
      - athena-network

  athena-pipeline:
    image: akeshmiri/athena-boot-pipeline:latest
    pull_policy: never
    restart: always
    depends_on:
      - athena-db
      - athena-core
    environment:
      DB_PSQL_URL: "jdbc:postgresql://athena-db:5432/athena"
    ports:
      - "8085:8085"
    networks:
      - athena-network

  athena-spec:
    image: akeshmiri/athena-boot-spec:latest
    pull_policy: never
    restart: always
    depends_on:
      - athena-db
      - athena-core
    environment:
      DB_PSQL_URL: "jdbc:postgresql://athena-db:5432/athena"
    ports:
      - "8086:8086"
    networks:
      - athena-network

  athena-tms:
    image: akeshmiri/athena-boot-tms:latest
    pull_policy: never
    restart: always
    depends_on:
      - athena-db
      - athena-core
    environment:
      DB_PSQL_URL: "jdbc:postgresql://athena-db:5432/athena"
    ports:
      - "8087:8087"
    networks:
      - athena-network

  athena-gateway:
    image: akeshmiri/athena-gateway:latest
    pull_policy: never
    restart: always
    depends_on:
      - athena-core
      - athena-git
      - athena-kube
      - athena-metric
      - athena-pipeline
      - athena-spec
      - athena-tms
    ports:
      - "8080:8080"
    networks:
      - athena-network
    environment:
      SPRING_PROFILES_ACTIVE: path
      SPRING_CLOUD_GATEWAY_ROUTES[0]_URI: http://athena-core:8081
      SPRING_CLOUD_GATEWAY_ROUTES[0]_ID: athena-core
      SPRING_CLOUD_GATEWAY_ROUTES[0]_PREDICATES[0]: Path= /core/**
      SPRING_CLOUD_GATEWAY_ROUTES[0]_FILTERS[0]: StripPrefix=1

      SPRING_CLOUD_GATEWAY_ROUTES[1]_URI: http://athena-git:8082
      SPRING_CLOUD_GATEWAY_ROUTES[1]_ID: athena-git
      SPRING_CLOUD_GATEWAY_ROUTES[1]_PREDICATES[0]: Path= /git/**
      SPRING_CLOUD_GATEWAY_ROUTES[1]_FILTERS[0]: StripPrefix=1

      SPRING_CLOUD_GATEWAY_ROUTES[2]_URI: http://athena-kube:8083
      SPRING_CLOUD_GATEWAY_ROUTES[2]_ID: athena-kube
      SPRING_CLOUD_GATEWAY_ROUTES[2]_PREDICATES[0]: Path= /kube/**
      SPRING_CLOUD_GATEWAY_ROUTES[2]_FILTERS[0]: StripPrefix=1

      SPRING_CLOUD_GATEWAY_ROUTES[3]_URI: http://athena-metric:8084
      SPRING_CLOUD_GATEWAY_ROUTES[3]_ID: athena-metric
      SPRING_CLOUD_GATEWAY_ROUTES[3]_PREDICATES[0]: Path= /metric/**
      SPRING_CLOUD_GATEWAY_ROUTES[3]_FILTERS[0]: StripPrefix=1

      SPRING_CLOUD_GATEWAY_ROUTES[4]_URI: http://athena-pipeline:8085
      SPRING_CLOUD_GATEWAY_ROUTES[4]_ID: athena-pipeline
      SPRING_CLOUD_GATEWAY_ROUTES[4]_PREDICATES[0]: Path= /pipeline/**
      SPRING_CLOUD_GATEWAY_ROUTES[4]_FILTERS[0]: StripPrefix=1

      SPRING_CLOUD_GATEWAY_ROUTES[5]_URI: http://athena-spec:8086
      SPRING_CLOUD_GATEWAY_ROUTES[5]_ID: athena-spec
      SPRING_CLOUD_GATEWAY_ROUTES[5]_PREDICATES[0]: Path= /spec/**
      SPRING_CLOUD_GATEWAY_ROUTES[5]_FILTERS[0]: StripPrefix=1

      SPRING_CLOUD_GATEWAY_ROUTES[6]_URI: http://athena-tms:8087
      SPRING_CLOUD_GATEWAY_ROUTES[6]_ID: athena-tms
      SPRING_CLOUD_GATEWAY_ROUTES[6]_PREDICATES[0]: Path= /tms/**
      SPRING_CLOUD_GATEWAY_ROUTES[6]_FILTERS[0]: StripPrefix=1

  pgadmin:
    image: dpage/pgadmin4:latest
    pull_policy: if_not_present
    restart: always
    depends_on:
      - athena-db
    ports:
      - "8888:80"
    networks:
      - athena-network
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@athena.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    user: root
    entrypoint: /bin/sh -c "chmod 0600 /pgpass; /entrypoint.sh;"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    configs:
      - source: servers.json
        target: /pgadmin4/servers.json
      - source: pgpass
        target: /pgpass

configs:
  pgpass:
    content: athena-db:5432:athena:postgres:password
  servers.json:
    content: |
      {"Servers": {"1": {
        "Group": "Servers",
        "Name": "Athena DB",
        "Host": "athena-db",
        "Port": 5432,
        "MaintenanceDB": "postgres",
        "Username": "postgres",
        "PassFile": "/pgpass",
        "SSLMode": "prefer"
      }}}

volumes:
  athena-db:
  pgadmin-data:

networks:
  athena-network:
