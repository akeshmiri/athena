# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Athena Package

on:
  push:
    branches:
      - main
  pull_request:
    types: [ opened, synchronize, reopened ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          server-id: github
          settings-path: ${{ github.workspace }}
          cache: maven

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build Athena Core Docker Image
        run: |
          mvn install -DskipTests
          mvn -pl athena-boot-core docker:build

      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ github.token }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn -B verify -P release org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=catools2_athena

      - name: Deploying to GitHub
        if: ${{ github.ref_type == 'tag' }}
        run: |
          mvn org.codehaus.mojo:versions-maven-plugin:2.15.0:set-property -Dproperty=revision -DnewVersion=$GITHUB_REF_NAME -q
          mvn deploy -P release -DskipTests
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Build Athena Docker Images
        run: |
          mvn -pl athena-boot-core package docker:build
          mvn -pl athena-boot-git package docker:build
          mvn -pl athena-boot-kube package docker:build
          mvn -pl athena-boot-metric package docker:build
          mvn -pl athena-boot-pipeline package docker:build
          mvn -pl athena-boot-spec package docker:build
          mvn -pl athena-boot-tms package docker:build

      - name: Push Docker Images
        if: ${{ github.ref_type == 'tag' }}
        env:
          DOCKER_USER: ${{secrets.DOCKER_USER}}
          DOCKER_PAT: ${{secrets.DOCKER_PAT}}
        run: |
          docker login -u $DOCKER_USER -p $DOCKER_PAT 
          mvn -pl athena-boot-core docker:push
          mvn -pl athena-boot-git docker:push
          mvn -pl athena-boot-kube docker:push
          mvn -pl athena-boot-metric docker:push
          mvn -pl athena-boot-pipeline docker:push
          mvn -pl athena-boot-spec docker:push
          mvn -pl athena-boot-tms docker:push
